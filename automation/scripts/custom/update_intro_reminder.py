#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç—Ä–æ
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –¥–ª—è –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
"""

import os
import datetime
from pathlib import Path

def check_intro_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª –∏–Ω—Ç—Ä–æ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–Ω—Ç—Ä–æ
    intro_path = Path("core/identity/intro.md")
    
    if not intro_path.exists():
        print("‚ùå –§–∞–π–ª intro.md –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(intro_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    today = datetime.datetime.now()
    
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if "–æ–±–Ω–æ–≤–ª–µ–Ω–æ:" in content:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É –∏–∑ —Å—Ç—Ä–æ–∫–∏
        for line in content.split('\n'):
            if "–æ–±–Ω–æ–≤–ª–µ–Ω–æ:" in line:
                try:
                    # –ò—â–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
                    import re
                    date_match = re.search(r'(\d{4}-\d{2}-\d{2})', line)
                    if date_match:
                        date_str = date_match.group(1)
                        last_update = datetime.datetime.strptime(date_str, "%Y-%m-%d")
                        days_since = (today - last_update).days
                        
                        if days_since > 30:
                            print(f"‚ö†Ô∏è  –ò–Ω—Ç—Ä–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–æ—Å—å {days_since} –¥–Ω–µ–π!")
                            print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å:")
                            print("   - –¢–µ–∫—É—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
                            print("   - –ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã")
                            print("   - –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–∞—Ä—å–µ—Ä–Ω–æ–º –ø—É—Ç–∏")
                            print("   - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –≤ —Ñ–∞–π–ª–µ")
                        elif days_since > 14:
                            print(f"üìù –ò–Ω—Ç—Ä–æ –æ–±–Ω–æ–≤–ª—è–ª–æ—Å—å {days_since} –¥–Ω–µ–π –Ω–∞–∑–∞–¥")
                            print("üí° –ú–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
                        else:
                            print(f"‚úÖ –ò–Ω—Ç—Ä–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ! –û–±–Ω–æ–≤–ª—è–ª–æ—Å—å {days_since} –¥–Ω–µ–π –Ω–∞–∑–∞–¥")
                    else:
                        print("‚ö†Ô∏è  –î–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                        
                except ValueError:
                    print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
                break
    else:
        print("‚ö†Ô∏è  –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    sections = [
        "## –¢–µ–∫—É—â–µ–µ –∏–Ω—Ç—Ä–æ",
        "## –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞", 
        "## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
        "## –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π",
        "## –ü–ª–∞–Ω—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é"
    ]
    
    missing_sections = []
    for section in sections:
        if section not in content:
            missing_sections.append(section)
    
    if missing_sections:
        print(f"\n‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑–¥–µ–ª—ã: {', '.join(missing_sections)}")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã")
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é
    print(f"\nüìÖ –°–µ–≥–æ–¥–Ω—è: {today.strftime('%Y-%m-%d')}")
    print("\nüí° –ß—Ç–æ –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –∏–Ω—Ç—Ä–æ:")
    print("   1. –ù–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
    print("   2. –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö")
    print("   3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –ø—É—Ç–∏")
    print("   4. –ù–æ–≤—ã–µ —Ö–æ–±–±–∏ –∏ —É–≤–ª–µ—á–µ–Ω–∏—è")
    print("   5. –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏")
    print("   6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∏–Ω—Ç—Ä–æ...")
    print("=" * 50)
    
    check_intro_file()
    
    print("\n" + "=" * 50)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()

