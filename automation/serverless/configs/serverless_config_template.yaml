# Serverless Configuration Template
# Supports multiple providers with free tier optimization

# AWS Lambda Configuration
aws:
  region: us-east-1
  functions:
    daily-summary:
      handler: daily_summary_lambda.lambda_handler
      runtime: python3.9
      timeout: 30  # Keep under 30s for cost optimization
      memory: 128  # Minimal memory for free tier
      environment:
        TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
        TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
      events:
        - schedule:
            rate: cron(0 12 * * ? *)  # Daily at 12 PM UTC
            enabled: true

    shadow-work-tracker:
      handler: shadow_work_lambda.lambda_handler
      runtime: python3.9
      timeout: 30
      memory: 128
      environment:
        SUPABASE_URL: ${SUPABASE_URL}
        SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      events:
        - http:
            path: /shadow-work
            method: post
            cors: true

    google-drive-sync:
      handler: google_drive_sync_lambda.lambda_handler
      runtime: python3.9
      timeout: 300  # Longer timeout for file operations
      memory: 256
      environment:
        GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
        SUPABASE_URL: ${SUPABASE_URL}
      events:
        - schedule:
            rate: cron(0 2 * * 1)  # Weekly on Monday at 2 AM UTC
            enabled: true

# Vercel Configuration (vercel.json)
vercel:
  version: 2
  builds:
    - src: "vercel_shadow_work.js"
      use: "@vercel/node"
  routes:
    - src: "/api/shadow-work"
      dest: "vercel_shadow_work.js"
  env:
    SUPABASE_URL: "@supabase-url"
    SUPABASE_ANON_KEY: "@supabase-anon-key"
    TELEGRAM_BOT_TOKEN: "@telegram-bot-token"
    TELEGRAM_CHAT_ID: "@telegram-chat-id"

# Supabase Configuration (for data storage)
supabase:
  project_id: your_project_id
  tables:
    shadow_work_daily:
      - date: date (primary key)
      - shadow_aspect: text
      - pattern_observed: text
      - integration_insight: text
      - timestamp: timestamptz

    shadow_work_weekly:
      - week_start: date (primary key)
      - archetype: text
      - light_aspects: jsonb
      - shadow_aspects: jsonb
      - integration_practice: text
      - timestamp: timestamptz

    shadow_work_monthly:
      - month: text (primary key)
      - shadow_aspect: text
      - breakthrough: text
      - integration_ritual: text
      - timestamp: timestamptz

# Environment Variables Template (.env.example)
environment_variables:
  # AWS
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: your_access_key
  AWS_SECRET_ACCESS_KEY: your_secret_key

  # Supabase
  SUPABASE_URL: https://your-project.supabase.co
  SUPABASE_ANON_KEY: your_anon_key
  SUPABASE_SERVICE_ROLE_KEY: your_service_role_key

  # Telegram
  TELEGRAM_BOT_TOKEN: your_bot_token
  TELEGRAM_CHAT_ID: your_chat_id

  # Google Drive (for sync operations)
  GOOGLE_CLIENT_ID: your_client_id
  GOOGLE_CLIENT_SECRET: your_client_secret
  GOOGLE_REFRESH_TOKEN: your_refresh_token

# Cost Monitoring Configuration
cost_monitoring:
  aws:
    budgets:
      - name: "serverless-free-tier"
        amount: 0.01  # $0.01 to catch any accidental charges
        notifications:
          - type: ACTUAL
            threshold: 80
            email: your-email@example.com

  vercel:
    # Vercel free tier: 100GB bandwidth, 100k invocations
    monitoring:
      bandwidth_limit: 100000  # MB
      invocations_limit: 100000

# Privacy & Security Configuration
privacy:
  data_encryption: true
  minimal_data_retention: true
  no_user_tracking: true
  local_data_processing: true

  # Data retention policies
  retention:
    daily_summaries: 90  # days
    shadow_work_data: 365  # days
    logs: 30  # days

# Deployment Scripts
deployment:
  scripts:
    deploy_aws: |
      #!/bin/bash
      # Deploy to AWS Lambda
      serverless deploy --stage prod

    deploy_vercel: |
      #!/bin/bash
      # Deploy to Vercel
      vercel --prod

    deploy_all: |
      #!/bin/bash
      # Deploy all serverless functions
      ./deploy_aws.sh
      ./deploy_vercel.sh

  rollback:
    aws: "serverless rollback --stage prod"
    vercel: "vercel rollback"

# Monitoring & Alerts
monitoring:
  alerts:
    - name: "lambda_timeout"
      condition: "FunctionTimeout > 0"
      action: "Send SNS notification"

    - name: "high_error_rate"
      condition: "Errors > 5%"
      action: "Send alert to Telegram"

    - name: "cost_threshold"
      condition: "EstimatedCharges > 0.01"
      action: "Immediate notification"

  dashboards:
    - name: "serverless-overview"
      metrics:
        - invocations
        - duration
        - errors
        - cost

# Backup Strategy
backup:
  strategy: "minimal_external_storage"
  frequency: "weekly"
  retention: "1_year"
  encryption: "client_side"

  # Export functions
  exports:
    - name: "export_shadow_work"
      schedule: "cron(0 3 * * 1)"  # Weekly export
      destination: "encrypted_local_file"

# Performance Optimization
optimization:
  cold_start_reduction:
    - provisioned_concurrency: 0  # Stay in free tier
    - minimal_package_size: true
    - optimized_dependencies: true

  execution_time:
    - target: "< 10 seconds"
    - monitoring: "CloudWatch metrics"
    - alerts: "Timeout warnings"

  memory_usage:
    - target: "128MB for simple functions"
    - monitoring: "Memory utilization"
    - optimization: "Profile and reduce"
