# Multi-Tier Database Configuration
# Core (Free Tier) + Main (Self-hosted) + Archive (Home Server)

# Database Tier Definitions
database_tiers:
  core:
    name: "Core Database"
    provider: "Supabase Free Tier"
    url_env: "CORE_SUPABASE_URL"
    key_env: "CORE_SUPABASE_ANON_KEY"
    capacity_mb: 500
    purpose: "Frequently accessed data"
    retention_policy: "90 days"
    priority: 1

  main:
    name: "Main Database"
    provider: "Self-hosted Supabase"
    url_env: "MAIN_SUPABASE_URL"
    key_env: "MAIN_SUPABASE_ANON_KEY"
    capacity_mb: 10000
    purpose: "Historical and moderate-access data"
    retention_policy: "2 years"
    priority: 2

  archive:
    name: "Archive Database"
    provider: "Home Server Supabase"
    url_env: "ARCHIVE_SUPABASE_URL"
    key_env: "ARCHIVE_SUPABASE_ANON_KEY"
    capacity_mb: 50000
    purpose: "Long-term archival storage"
    retention_policy: "Forever"
    priority: 3

# Data Type Classification Rules
data_classification:
  # Core Tier (Always in Free Tier)
  core_data_types:
    - daily_summary
    - shadow_work_current
    - recent_journal
    - active_tasks
    - current_projects
    - telegram_bot_state

  # Main Tier (Historical Data)
  main_data_types:
    - journal_entries
    - shadow_work_history
    - completed_projects
    - research_notes
    - learning_materials
    - productivity_history

  # Archive Tier (Rare Access)
  archive_data_types:
    - old_projects
    - backup_files
    - raw_analytics
    - media_files
    - deleted_items

# Data Lifecycle Policies
lifecycle_policies:
  daily_summary:
    core_retention_days: 30
    main_retention_days: 365
    archive_after_days: 1095  # 3 years
    migration_trigger: "age_based"

  shadow_work:
    core_retention_days: 90
    main_retention_days: 730  # 2 years
    archive_after_days: 1825  # 5 years
    migration_trigger: "age_based"

  journal_entries:
    core_retention_days: 7
    main_retention_days: 365
    archive_after_days: 1825
    migration_trigger: "age_based"

  projects:
    core_retention_days: 90
    main_retention_days: 1095  # 3 years
    archive_after_days: 3650  # 10 years
    migration_trigger: "completion_status"

  research_notes:
    core_retention_days: 30
    main_retention_days: 730
    archive_after_days: 1825
    migration_trigger: "size_based"

  contacts:
    core_retention_days: 365
    main_retention_days: 1825
    archive_after_days: -1  # Never delete
    migration_trigger: "age_based"

  templates:
    core_retention_days: 90
    main_retention_days: 1825
    archive_after_days: -1  # Keep forever
    migration_trigger: "age_based"

# Migration Rules
migration_rules:
  age_based:
    trigger: "created_at"
    threshold_unit: "days"
    action: "move_to_next_tier"

  size_based:
    trigger: "size_kb"
    threshold_value: 100
    action: "move_to_next_tier"

  completion_status:
    trigger: "status"
    threshold_value: "completed"
    action: "move_to_main_tier"

# Capacity Management
capacity_management:
  core_tier:
    warning_threshold_percent: 80
    critical_threshold_percent: 90
    auto_migration_enabled: true
    migration_batch_size: 10

  main_tier:
    warning_threshold_percent: 85
    critical_threshold_percent: 95
    auto_archiving_enabled: true
    archive_batch_size: 50

# Sync Configuration
sync_configuration:
  sync_interval_minutes: 60
  max_sync_batch_size: 100
  retry_attempts: 3
  retry_delay_seconds: 30

  # Sync priorities (higher = more frequent)
  sync_priorities:
    daily_summary: 10
    shadow_work: 8
    journal: 6
    projects: 5
    research: 4
    contacts: 3
    templates: 2

# Monitoring and Alerts
monitoring:
  enable_size_tracking: true
  enable_usage_alerts: true
  enable_sync_status_tracking: true

  alerts:
    core_tier_full:
      threshold_percent: 90
      message: "Core database approaching capacity limit"
      action: "auto_migrate_old_data"

    sync_failures:
      threshold_count: 5
      message: "Multiple sync failures detected"
      action: "send_alert"

    data_loss:
      threshold_count: 1
      message: "Potential data loss detected"
      action: "immediate_alert"

# Backup Configuration
backup:
  core_tier:
    frequency: "daily"
    retention_days: 30
    destination: "main_tier"

  main_tier:
    frequency: "weekly"
    retention_days: 365
    destination: "archive_tier"

  archive_tier:
    frequency: "monthly"
    retention_days: -1
    destination: "external_storage"

# Home Server Integration
home_server:
  enabled: false  # Set to true when configured
  connection_type: "ssh"  # or "api"
  host_env: "HOME_SERVER_HOST"
  user_env: "HOME_SERVER_USER"
  key_path_env: "HOME_SERVER_KEY_PATH"
  archive_path: "/data/archive"
  api_endpoint_env: "HOME_SERVER_API_ENDPOINT"
  api_key_env: "HOME_SERVER_API_KEY"

# Performance Optimization
performance:
  query_optimization:
    enable_indexing: true
    enable_caching: true
    cache_ttl_minutes: 60

  connection_pooling:
    core_tier_pool_size: 10
    main_tier_pool_size: 20
    archive_tier_pool_size: 5

# Security Configuration
security:
  encryption:
    enable_at_rest: true
    enable_in_transit: true
    key_rotation_days: 90

  access_control:
    core_tier: "read_write"
    main_tier: "read_write"
    archive_tier: "read_only"

# Cost Optimization
cost_optimization:
  free_tier_limits:
    supabase_storage_mb: 500
    supabase_bandwidth_gb: 50
    supabase_rows: 50000

  monitoring:
    enable_cost_tracking: true
    cost_alert_threshold: 0.01  # $0.01
    monthly_budget_limit: 0.10  # $0.10

# Environment Variables Template
environment_variables:
  # Core Database (Supabase Free Tier)
  CORE_SUPABASE_URL: "https://your-project.supabase.co"
  CORE_SUPABASE_ANON_KEY: "your-anon-key"

  # Main Database (Self-hosted)
  MAIN_SUPABASE_URL: "http://your-main-server:54321"
  MAIN_SUPABASE_ANON_KEY: "your-main-anon-key"

  # Archive Database (Home Server)
  ARCHIVE_SUPABASE_URL: "http://home-server:54321"
  ARCHIVE_SUPABASE_ANON_KEY: "your-archive-anon-key"

  # Home Server Connection (Optional)
  HOME_SERVER_HOST: "your-home-server-ip"
  HOME_SERVER_USER: "your-ssh-user"
  HOME_SERVER_KEY_PATH: "~/.ssh/id_rsa"
  HOME_SERVER_ARCHIVE_PATH: "/data/archive"
  HOME_SERVER_API_ENDPOINT: "http://home-server:8080/api"
  HOME_SERVER_API_KEY: "your-api-key"

  # Other Services
  TELEGRAM_BOT_TOKEN: "your-bot-token"
  TELEGRAM_CHAT_ID: "your-chat-id"

# Setup Instructions
setup_instructions:
  core_database: |
    1. Create Supabase account
    2. Create new project
    3. Set environment variables
    4. Create required tables

  main_database: |
    1. Set up Supabase self-hosted
    2. Configure database
    3. Set up replication from core
    4. Configure backup policies

  archive_database: |
    1. Set up home server
    2. Install Supabase
    3. Configure as archive tier
    4. Set up automated backups

# Migration Commands
migration_commands:
  initial_setup: |
    python3 multi_tier_setup.py --init

  migrate_existing_data: |
    python3 data_migration.py --all

  sync_now: |
    python3 data_sync_manager.py

  check_status: |
    python3 data_lifecycle_manager.py --status

# Monitoring Commands
monitoring_commands:
  check_sizes: |
    python3 data_monitor.py --sizes

  check_sync_status: |
    python3 data_monitor.py --sync

  generate_report: |
    python3 data_monitor.py --report
