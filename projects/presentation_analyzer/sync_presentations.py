#!/usr/bin/env python3
"""
Quick Presentation Sync Script
–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –≤ —É—Ç—Ä–µ–Ω–Ω–µ–π —Ä—É—Ç–∏–Ω–µ
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
project_root = Path(__file__).parent
sys.path.append(str(project_root))

from src.main import PresentationAnalyzer

def quick_sync():
    """–ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π"""
    try:
        print("üîÑ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π...")
        
        analyzer = PresentationAnalyzer()
        
        # –¢–æ–ª—å–∫–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–±–µ–∑ –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏)
        downloaded_files = analyzer.sync_presentations()
        
        if downloaded_files:
            print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(downloaded_files)}")
            
            # –ö—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            print("\nüì• –°–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
            for file_info in downloaded_files:
                print(f"  ‚Ä¢ {file_info['file_name']}")
            
            return True
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def quick_process():
    """–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    try:
        print("üîÑ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π...")
        
        analyzer = PresentationAnalyzer()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        results = analyzer.process_all()
        
        if results:
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(results)}")
            
            # –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç
            print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
            for result in results:
                print(f"  ‚Ä¢ {result['file_name']}: {result['word_count']} —Å–ª–æ–≤, {len(result['keywords'])} –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
            
            return True
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
        return False

if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(description="–ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π")
    parser.add_argument("--sync", action="store_true", help="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –∏–∑ Google Drive")
    parser.add_argument("--process", action="store_true", help="–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    parser.add_argument("--full", action="store_true", help="–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è + –æ–±—Ä–∞–±–æ—Ç–∫–∞)")
    
    args = parser.parse_args()
    
    if args.full:
        # –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        analyzer = PresentationAnalyzer()
        report = analyzer.run_full_analysis()
        
        if report['status'] == 'success':
            print(f"‚úÖ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            print(f"üì• –°–∫–∞—á–∞–Ω–æ: {report['downloaded_files']}, –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {report['processed_files']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {report.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    
    elif args.sync:
        quick_sync()
    
    elif args.process:
        quick_process()
    
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ç–æ–ª—å–∫–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        quick_sync()
