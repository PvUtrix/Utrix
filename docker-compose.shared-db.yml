# Docker Compose для персональной системы с единой базой данных
# Этот файл настраивает Gitea, PostgreSQL и Redis для локальной разработки
# Все сервисы используют одну базу данных PostgreSQL

version: '3.8'

services:
  # Единая база данных PostgreSQL для всех сервисов
  shared-postgres:
    image: postgres:15-alpine
    container_name: personal-system-postgres
    restart: unless-stopped
    
    # Переменные окружения для базы данных
    environment:
      POSTGRES_DB: personal_system_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SHARED_DB_PASSWORD:-secure_password_123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      
    # Тома для данных
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/database/init:/docker-entrypoint-initdb.d
      - ./backups:/backups
      
    # Порты
    ports:
      - "5432:5432"
      
    # Настройки сети
    networks:
      - personal-system-network
      
    # Проверки здоровья
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Общий Redis для кэширования и сессий
  shared-redis:
    image: redis:7-alpine
    container_name: personal-system-redis
    restart: unless-stopped
    
    # Переменные окружения для Redis
    environment:
      REDIS_PASSWORD: ${SHARED_REDIS_PASSWORD:-redis_password_123}
      
    # Тома для данных
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
      
    # Порты
    ports:
      - "6379:6379"
      
    # Настройки сети
    networks:
      - personal-system-network
      
    # Команда запуска с конфигурацией
    command: redis-server /usr/local/etc/redis/redis.conf
      
    # Проверки здоровья
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      
    # Лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Gitea - Git-сервер
  gitea:
    image: gitea/gitea:latest
    container_name: personal-system-gitea
    restart: unless-stopped
    
    # Переменные окружения для Gitea
    environment:
      # Основные настройки
      GITEA__server__DOMAIN: ${GITEA_DOMAIN:-localhost}
      GITEA__server__ROOT_URL: ${GITEA_ROOT_URL:-http://localhost:3000/}
      GITEA__server__SSH_DOMAIN: ${GITEA_SSH_DOMAIN:-localhost}
      GITEA__server__SSH_PORT: ${GITEA_SSH_PORT:-22}
      
      # Настройки базы данных - ИСПОЛЬЗУЕМ ЕДИНУЮ БАЗУ
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: shared-postgres
      GITEA__database__NAME: personal_system_db
      GITEA__database__USER: postgres
      GITEA__database__PASSWD: ${SHARED_DB_PASSWORD:-secure_password_123}
      GITEA__database__PORT: 5432
      GITEA__database__SSL_MODE: disable
      
      # Настройки кэша Redis
      GITEA__cache__ADAPTER: redis
      GITEA__cache__HOST: shared-redis
      GITEA__cache__PORT: 6379
      GITEA__cache__PASSWORD: ${SHARED_REDIS_PASSWORD:-redis_password_123}
      GITEA__cache__DB: 0
      
      # Настройки сессий
      GITEA__session__PROVIDER: redis
      GITEA__session__PROVIDER_CONFIG: network=tcp,addr=shared-redis:6379,password=${SHARED_REDIS_PASSWORD:-redis_password_123},db=1,pool_size=100,idle_timeout=180
      
      # Настройки очередей
      GITEA__queue__TYPE: redis
      GITEA__queue__REDIS_HOST: shared-redis
      GITEA__queue__REDIS_PORT: 6379
      GITEA__queue__REDIS_PASSWORD: ${SHARED_REDIS_PASSWORD:-redis_password_123}
      GITEA__queue__REDIS_DB: 2
      
      # Настройки логирования
      GITEA__log__LEVEL: Info
      GITEA__log__MODE: console
      
      # Настройки безопасности
      GITEA__security__INSTALL_LOCK: true
      GITEA__security__SECRET_KEY: ${GITEA_SECRET_KEY:-your-secret-key-here}
      GITEA__security__INTERNAL_TOKEN: ${GITEA_INTERNAL_TOKEN:-your-internal-token-here}
      
      # Настройки администратора
      GITEA__admin__USERNAME: ${GITEA_ADMIN_USER:-admin}
      GITEA__admin__EMAIL: ${GITEA_ADMIN_EMAIL:-admin@localhost}
      GITEA__admin__PASSWORD: ${GITEA_ADMIN_PASSWORD:-admin123}
      
      # Настройки репозиториев
      GITEA__repository__ROOT: /data/git/repositories
      GITEA__repository__SCRIPT_TYPE: bash
      GITEA__repository__DEFAULT_BRANCH: main
      
      # Настройки Git LFS
      GITEA__lfs__PATH: /data/git/lfs
      GITEA__lfs__STORAGE_TYPE: local
      
      # Настройки вложений
      GITEA__attachment__PATH: /data/git/attachments
      GITEA__attachment__MAX_SIZE: 4
      GITEA__attachment__ALLOWED_TYPES: .doc,.docx,.pdf,.txt,.md,.jpg,.jpeg,.png,.gif
      
      # Настройки аватаров
      GITEA__picture__AVATAR_UPLOAD_PATH: /data/git/avatars
      GITEA__picture__REPOSITORY_AVATAR_UPLOAD_PATH: /data/git/repo-avatars
      
      # Настройки индексации
      GITEA__indexer__REPO_INDEXER_ENABLED: true
      GITEA__indexer__MAX_FILE_SIZE: 1048576
      
      # Настройки уведомлений
      GITEA__service__ENABLE_NOTIFY_MAIL: false
      GITEA__service__ENABLE_NOTIFY_WEBHOOK: true
      
      # Настройки веб-хуков
      GITEA__webhook__QUEUE_LENGTH: 1000
      GITEA__webhook__DELIVER_TIMEOUT: 5
      GITEA__webhook__SKIP_TLS_VERIFY: false
      
      # Настройки API
      GITEA__api__ENABLE_SWAGGER: true
      GITEA__api__MAX_RESPONSE_ITEMS: 50
      
      # Настройки UI
      GITEA__ui__SHOW_USER_EMAIL: false
      GITEA__ui__THEMES: auto,gitea,arc-green
      GITEA__ui__DEFAULT_THEME: auto
      
      # Настройки поиска
      GITEA__search__REPO_INDEXER_ENABLED: true
      GITEA__search__MAX_FILE_SIZE: 1048576
      
      # Настройки времени
      GITEA__time__DEFAULT_UI_LOCATION: Europe/Moscow
      
    # Тома для данных
    volumes:
      - gitea_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      
    # Порты
    ports:
      - "3000:3000"
      - "222:22"  # SSH на другом порту для избежания конфликтов
      
    # Настройки сети
    networks:
      - personal-system-network
      
    # Зависимости
    depends_on:
      shared-postgres:
        condition: service_healthy
      shared-redis:
        condition: service_healthy
        
    # Проверки здоровья
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s
      
    # Лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M

  # Мониторинг базы данных (опционально)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: personal-system-postgres-exporter
    restart: unless-stopped
    
    # Переменные окружения
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:${SHARED_DB_PASSWORD:-secure_password_123}@shared-postgres:5432/personal_system_db?sslmode=disable"
      
    # Порты
    ports:
      - "9187:9187"
      
    # Настройки сети
    networks:
      - personal-system-network
      
    # Зависимости
    depends_on:
      shared-postgres:
        condition: service_healthy
        
    # Лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M

  # Мониторинг Redis (опционально)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: personal-system-redis-exporter
    restart: unless-stopped
    
    # Переменные окружения
    environment:
      REDIS_ADDR: "redis://:${SHARED_REDIS_PASSWORD:-redis_password_123}@shared-redis:6379"
      
    # Порты
    ports:
      - "9121:9121"
      
    # Настройки сети
    networks:
      - personal-system-network
      
    # Зависимости
    depends_on:
      shared-redis:
        condition: service_healthy
        
    # Лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M

# Тома для данных
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  gitea_data:
    driver: local

# Сети
networks:
  personal-system-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Комментарии и заметки
# 
# ВАЖНО: Эта конфигурация использует ЕДИНУЮ базу данных PostgreSQL
# для всех сервисов. Это исключает необходимость в отдельных базах
# данных для каждого сервиса.
#
# Для запуска:
# 1. Создайте файл .env с переменными окружения
# 2. Запустите: docker-compose -f docker-compose.shared-db.yml up -d
# 3. Откройте Gitea: http://localhost:3000
# 4. Настройте администратора при первом запуске
#
# Преимущества единой базы данных:
# - Меньше ресурсов сервера
# - Проще управление и резервное копирование
# - Единая точка мониторинга
# - Возможность кросс-сервисных запросов
#
# Все сервисы используют одну базу данных с разными схемами,
# что обеспечивает изоляцию данных между сервисами.
